name: PR Validation

on:
  pull_request:
    branches: [ main, develop ]
    types: [ opened, synchronize, reopened ]

permissions:
  contents: read
  issues: write
  pull-requests: write

env:
  DOTNET_VERSION: '8.0.x'

jobs:
  validate:
    name: Validate Pull Request
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build solution
      id: build
      run: dotnet build --configuration Release --no-restore
      
    - name: Run tests with coverage
      id: test
      run: dotnet test --configuration Release --no-build --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./coverage
      
    - name: Validate package can be built
      id: package
      run: dotnet pack ./Core/Core.csproj --configuration Release --output ./validation-packages
      
    - name: Check package contents
      run: |
        echo "Package contents:"
        if ls ./validation-packages/*.nupkg 1> /dev/null 2>&1; then
          unzip -l ./validation-packages/*.nupkg | head -20
        else
          echo "No .nupkg files found"
          ls -la ./validation-packages/
        fi
        
    - name: Comment PR with validation results
      uses: actions/github-script@v7
      if: always()
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          try {
            // Check if we're in a pull request context
            if (!context.issue.number) {
              console.log('Not running in a pull request context, skipping comment');
              return;
            }
            
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && comment.body.includes('PR Validation Results')
            );
            
            // Determine validation status based on previous steps
            const buildStatus = '${{ steps.build.outcome }}' || 'success';
            const testStatus = '${{ steps.test.outcome }}' || 'success';
            const packageStatus = '${{ steps.package.outcome }}' || 'success';
            
            const buildIcon = buildStatus === 'success' ? '‚úÖ' : '‚ùå';
            const testIcon = testStatus === 'success' ? '‚úÖ' : '‚ùå';
            const packageIcon = packageStatus === 'success' ? '‚úÖ' : '‚ùå';
            
            const body = `## PR Validation Results
            
            ${buildIcon} **Build**: ${buildStatus === 'success' ? 'Successful' : 'Failed'}
            ${testIcon} **Tests**: ${testStatus === 'success' ? 'All tests passed' : 'Tests failed'}
            ${packageIcon} **Package**: ${packageStatus === 'success' ? 'NuGet package builds correctly' : 'Package build failed'}
            
            ${buildStatus === 'success' && testStatus === 'success' && packageStatus === 'success' 
              ? 'This PR is ready for review! üéâ' 
              : 'Please fix the issues above before merging.'}`;
            
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: body
              });
              console.log('Updated existing PR comment');
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: body
              });
              console.log('Created new PR comment');
            }
          } catch (error) {
            console.error('Failed to comment on PR:', error);
            console.log('PR number:', context.issue.number);
            console.log('Repository:', context.repo.owner + '/' + context.repo.repo);
            console.log('Error details:', error.message);
            
            // Don't fail the workflow if commenting fails
            console.log('Continuing workflow despite comment failure...');
          }

